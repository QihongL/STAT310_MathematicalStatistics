data$X.number. * data$X.frequency.
sum(data$X.number. * data$X.frequency.)
mean(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
pMLE = mean(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
? rbinom
rbinom(12, 10, pMLE)
rbinom(12, totalBoys, pMLE)
rbinom(12, totalBoys, pMLE)
rbinom(12, totalBoys, pMLE)
rbinom(12, totalBoys, pMLE)
rbinom(12, totalBoys, pMLE)
plot(rbinom(12, totalBoys, pMLE))
bat(rbinom(12, totalBoys, pMLE))
barplot(rbinom(12, totalBoys, pMLE))
pMLE = mean(data$X.number. * data$X.frequency.) / 12
pMLE
mean(data$X.number. * data$X.frequency.)
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 9/Geissler.txt')
# compute CHISQ statistics
# (Oi - Ei)^2 / Ei  <=> (Xi - nPi)^2 / nPi
# n = total counts
# Assume the bite rate is constant: P(boys at ith numberCategory) ~ bin(n,p)
totalBoys = sum(data$X.frequency.)
# Expected counts for diff # follows bin(n,p)
# n = totalBoys
# we need to estimate what p is
pMLE = mean(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
mean(data$X.number. * data$X.frequency.)
data$X.frequency.
mean(data$X.number. * data$X.frequency.) / totalBoys
data$X.number. * data$X.frequency.
mean(data$X.number. )
data$X.number. * data$X.frequency.
sum(data$X.number. * data$X.frequency.)
sum(data$X.frequency.)
sum(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
sum(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
sum(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
pMLE = Xbar / mean(data$X.number.)
Xbar = sum(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
pMLE = Xbar / mean(data$X.number.)
pMLE
mean(data$X.number.)
pMLE = Xbar / 12
pMLE
Xbar = sum(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
pMLE = Xbar / 12
rbinom
rbinom(12,100,pMLE)
rbinom(12,totalBoys,pMLE)
rbinom
? rbinom
pbinom
pbinom(seq(1:3), 12, pMLE)
pbinom(seq(1:12), 12, pMLE)
qbinom(seq(1:12), 12, pMLE)
dbinom(seq(1:12), 12, pMLE)
dbinom(seq(1:12), 12, pMLE)
dbinom(seq(1:12), 12, pMLE) * totalBoys
data$X.frequency.
temp = cbind(dbinom(seq(1:12), 12, pMLE) * totalBoys, data$X.frequency.)
temp
temp = cbind(dbinom(seq(0:12), 12, pMLE) * totalBoys, data$X.frequency.)
temp
temp = cbind(dbinom(seq(0:12), 13, pMLE) * totalBoys, data$X.frequency.)
temp
dbinom(seq(0:12), 13, pMLE)
Pi = dbinom(seq(0:12), 13, pMLE)
Pi
Ei = totalBites * Pi
Ei
Ei = totalBites * Pi
Ei = totalBoys * Pi
Ei
sum(Ei )
barplot(data$X.bites. - Ei, main = 'Deviation: observed vs. actual bite counts')
data$X.bites. - Ei
barplot(data$X.bites. - Ei, main = 'Deviation: observed vs. actual bite counts')
barplot(data$X.frequency. - Ei, main = 'Deviation: observed vs. actual bite counts')
stats = sum((((data$X.bites. - Ei))^2) / Ei)
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 9/Geissler.txt')
# compute CHISQ statistics
# (Oi - Ei)^2 / Ei  <=> (Xi - nPi)^2 / nPi
# n = total counts
# Assume the bite rate is constant: P(boys at ith numberCategory) ~ bin(n,p)
totalBoys = sum(data$X.frequency.)
# Expected counts for diff # follows bin(n,p)
# n = totalBoys
# we need to estimate what p is
Xbar = sum(data$X.number. * data$X.frequency.) / sum(data$X.frequency.)
pMLE = Xbar / 12
Pi = dbinom(seq(0:12), 13, pMLE)
# Ei = nPi
Ei = totalBoys * Pi
barplot(data$X.frequency. - Ei, main = 'Deviation: observed vs. actual bite counts')
stats = sum((((data$X.frequency. - Ei))^2) / Ei)
stats
N = dim(data)[1]
N-1
crit = qchisq(.99, N-1)
crit
crit = qchisq(.999, N-1)
crit
stats
crit
Ei
dbinom
? dbinom
dbinom(seq(0:12), 1, pMLE)
dbinom(seq(0:12), 12, pMLE)
dbinom(seq(0:12), 13, pMLE)
dbinom(seq(0:12), 12, pMLE)
dbinom(seq(0:12), 13, pMLE)
Pi = dbinom(seq(0:12), 13, pMLE)
dbinom(seq(0:12), 13, pMLE)
Pi = dbinom(seq(0:12), 13, pMLE)
# Ei = nPi
Ei = totalBoys * Pi
Ei
totalBoys
Pi
seq(0:12)
seq(0,12)
Pi = dbinom(seq(0,12), 13, pMLE)
# Ei = nPi
Ei = totalBoys * Pi
Ei
Pi = dbinom(seq(0,12), 12, pMLE)
Pi
Ei
Ei = totalBoys * Pi
Ei
Pi = dbinom(seq(0,12), 12, pMLE)
# Ei = nPi
Ei = totalBoys * Pi
Ei
barplot(data$X.frequency. - Ei, main = 'Deviation: observed vs. actual bite counts')
stats = sum((((data$X.frequency. - Ei))^2) / Ei)
stats
N
N = dim(data)[1]
crit
pMLE
Pi
Pi
temp = cbind(pi, Ei)
temp
Pi
temp = cbind(Pi, Ei)
temp
barplot(data$X.frequency. - Ei, main = 'Deviation: observed vs. actual bite counts')
barplot(data$X.frequency. - Ei, main = 'Deviation: observed vs. actual counts')
sum(Ei)
sum(Pi)
stats
crit = qchisq(.999, N-1-1)
crit
39.2
39.2^2
39.2^2 / 2
qnorm(0)
pnorm(0)
pnorm(2)
qnorm(2)
qnorm(.95)
qnorm(.5)
qnorm(.25)
qnorm(.95)
qnorm(.90)
qnorm(.1)
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 9/Geissler.txt')
data
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 9/Geissler.txt')
# compute CHISQ statistics
# (Oi - Ei)^2 / Ei  <=> (Xi - nPi)^2 / nPi
# n = total counts
# Assume the bite rate is constant: P(boys at ith numberCategory) ~ bin(n,p)
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
data
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
data$X.test.
Xbar = mean(data$X.test.)
Ybar = mean(data$X.control.)
varX = sum((data$X.test. - Xbar)^2)/(n-1)
data$X.test. - Xbar
varX = sum((data$X.test. - Xbar)^2)/(n-1)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
var(data$X.test.)
var(data$X.control.)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
sd(data$X.test.)
SeX = sqrt(varX/n)
SeY = sqrt(varY/n)
SeX = sqrt(varX)
SeY = sqrt(varY/n)
SeX
SeY
sd(data$X.test.)
sd(data$X.control.)
SeY = sqrt(varY/n)
SeY
SeY
SeY = sqrt(varY)
SeY
sd(data$X.control.)
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
# a) plot diff against control
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
# => if the control rate is high, then the difference become more negative,
# the magnitude also increases
# b) mean diff, sd, CI
Xbar = mean(data$X.test.)
Ybar = mean(data$X.control.)
varX = sum((data$X.test. - Xbar)^2)/(n-1)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
SeX = sqrt(varX)
SeY = sqrt(varY)
mean(data$X.test.) - mean(data$X.control.)
meanDiff = mean(data$X.test.) - mean(data$X.control.)
varDiff = (varX + varY - cor(data$X.test.,data$X.control.) * sqrt(varX*varY))/n
sdDiff = sqrt(varDiff)
sdDiff
meanDiff
sdDiff
CI_low = meanDiff - sdDiff * qt(0.95,n-1)
CI_high = meanDiff + sdDiff * qt(0.95,n-1)
CI_low
CI_high
qt(0.95,n-1)
(data$X.test. - Xbar)
* (data$X.control. - Ybar)
(data$X.control. - Ybar)
(data$X.test. - Xbar) * (data$X.control. - Ybar)
covXY = (data$X.test. - Xbar) * (data$X.control. - Ybar)
covXY = sum((data$X.test. - Xbar) * (data$X.control. - Ybar))
covXY
cov(data$X.test., data$X.control.)
sum((data$X.test. - Xbar) * (data$X.control. - Ybar)) / (n-1)
corrXY = covXY / (SeX*SeY)
corrXY
covXY
covXY = sum((data$X.test. - Xbar) * (data$X.control. - Ybar)) / (n-1)
corrXY = covXY / (SeX*SeY)
corrXY
cor(data$X.test. , data$X.control.)
varDiff = (varX + varY - 2 * corrXY * SeX * SeY) / n
varDiff
sdDiff = sqrt(varDiff)
sdDiff
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
# a) plot diff against control
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
# => if the control rate is high, then the difference become more negative,
# the magnitude also increases
# b) mean diff, sd, CI
Xbar = mean(data$X.test.)
Ybar = mean(data$X.control.)
varX = sum((data$X.test. - Xbar)^2)/(n-1)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
covXY = sum((data$X.test. - Xbar) * (data$X.control. - Ybar)) / (n-1)
SeX = sqrt(varX)
SeY = sqrt(varY)
corrXY = covXY / (SeX*SeY)
meanDiff = mean(data$X.test.) - mean(data$X.control.)
meanDiff
varDiff
meanDiff = mean(data$X.control.) - mean(data$X.test.)
meanDiff
varDiff = (varX + varY - 2 * corrXY * SeX * SeY) / n
sdDiff = sqrt(varDiff)
meanDiff
sdDiff
# CI = meanDiff +- sdDiff * T
CI_low = meanDiff - sdDiff * qt(0.95,n-1)
CI_high = meanDiff + sdDiff * qt(0.95,n-1)
varDiff = (varX + varY - 2 * corrXY * SeX * SeY) / n
sdDiff = sqrt(varDiff)
meanDiff
sdDiff
# CI = meanDiff +- sdDiff * T
CI_low = meanDiff - sdDiff * qt(0.95,n-1)
CI_high = meanDiff + sdDiff * qt(0.95,n-1)
data
CI_low = meanDiff - sdDiff * qt(0.975,n-1)
CI_high = meanDiff + sdDiff * qt(0.975,n-1)
meanDiff
sdDiff
testStats = meanDiff / (sdDiff / sqrt(n))
qt(0.975,n-1)
testStats
testStats = meanDiff / sdDiff
testStats
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
# a) plot diff against control
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
# => if the control rate is high, then the difference become more negative,
# the magnitude also increases
# b) mean diff, sd, CI
Xbar = mean(data$X.test.)
Ybar = mean(data$X.control.)
varX = sum((data$X.test. - Xbar)^2)/(n-1)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
covXY = sum((data$X.test. - Xbar) * (data$X.control. - Ybar)) / (n-1)
SeX = sqrt(varX)
SeY = sqrt(varY)
corrXY = covXY / (SeX*SeY)
meanDiff = mean(data$X.test.)- mean(data$X.control.)
varDiff = (varX + varY - 2 * corrXY * SeX * SeY) / n
sdDiff = sqrt(varDiff)
meanDiff
sdDiff
# CI = meanDiff +- sdDiff * T
CI_low = meanDiff - sdDiff * qt(0.975,n-1)
CI_high = meanDiff + sdDiff * qt(0.975,n-1)
CI_low
CI_high
CI_low = meanDiff - sdDiff * qt(0.975,n-1)
CI_high = meanDiff + sdDiff * qt(0.975,n-1)
#c) conduct a t test, since the variance is unknown
# under null:
testStats = meanDiff / sdDiff
testStats
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
# a) plot diff against control
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
# => if the control rate is high, then the difference become more negative,
# the magnitude also increases
# b) mean diff, sd, CI
Xbar = mean(data$X.test.)
Ybar = mean(data$X.control.)
varX = sum((data$X.test. - Xbar)^2)/(n-1)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
covXY = sum((data$X.test. - Xbar) * (data$X.control. - Ybar)) / (n-1)
SeX = sqrt(varX)
SeY = sqrt(varY)
corrXY = covXY / (SeX*SeY)
meanDiff = mean(data$X.test.)- mean(data$X.control.)
varDiff = (varX + varY - 2 * corrXY * SeX * SeY) / n
sdDiff = sqrt(varDiff)
meanDiff
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
# a) plot diff against control
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
# => if the control rate is high, then the difference become more negative,
# the magnitude also increases
# b) mean diff, sd, CI
Xbar = mean(data$X.test.)
Ybar = mean(data$X.control.)
varX = sum((data$X.test. - Xbar)^2)/(n-1)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
covXY = sum((data$X.test. - Xbar) * (data$X.control. - Ybar)) / (n-1)
SeX = sqrt(varX)
SeY = sqrt(varY)
corrXY = covXY / (SeX*SeY)
meanDiff = mean(data$X.test.)- mean(data$X.control.)
varDiff = varX + varY - 2 * corrXY * SeX * SeY
varDiff
varMeanDiff = varDiff / n
varMeanDiff
varX + varY - 2 * covXY
varMeanDiff = varDiff / n
varMeanDiff
varMeanDiff
data$X.test. - data$X.control.
Di = data$X.test. - data$X.control.
mean(Di)
meanDiff
meanDiff = mean(Di)
meanDiff
Di
Di - meanDiff
(Di - meanDiff)^2
sum((Di - meanDiff)^2)
sum((Di - meanDiff)^2) / (n-1)
varMeanDiff
varDiff
sum((Di - meanDiff)^2) / (n-1)
varDiff
varMeanDiff
sdDiff = sqrt(varDiff/n)
sdDiff
sdDiff = sqrt(varMeanDiff)
sdDiff
meanDiff
sdDiff
CI_low = meanDiff - sdDiff * qt(0.975,n-1)
CI_high = meanDiff + sdDiff * qt(0.975,n-1)
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
# a) plot diff against control
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
# => if the control rate is high, then the difference become more negative,
# the magnitude also increases
# b) mean diff, sd, CI
Xbar = mean(data$X.test.)
Ybar = mean(data$X.control.)
varX = sum((data$X.test. - Xbar)^2)/(n-1)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
covXY = sum((data$X.test. - Xbar) * (data$X.control. - Ybar)) / (n-1)
SeX = sqrt(varX)
SeY = sqrt(varY)
corrXY = covXY / (SeX*SeY)
Di = data$X.test. - data$X.control.
meanDiff = mean(Di)
varDiff = varX + varY - 2 * covXY
varMeanDiff = varDiff / n
sdDiff = sqrt(varMeanDiff)
meanDiff
sdDiff
# CI = meanDiff +- sdDiff * T
CI_low = meanDiff - sdDiff * qt(0.975,n-1)
CI_high = meanDiff + sdDiff * qt(0.975,n-1)
CI_high
meanDiff
sdDiff
n
n-1
qt(0.975,n-1)
testStats = meanDiff / sdDiff
testStats
qt(0.975,n-1)
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
# a) plot diff against control
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
# => if the control rate is high, then the difference become more negative,
# the magnitude also increases
# b) mean diff, sd, CI
Xbar = mean(data$X.test.)
Ybar = mean(data$X.control.)
varX = sum((data$X.test. - Xbar)^2)/(n-1)
varY = sum((data$X.control. - Ybar)^2)/(n-1)
covXY = sum((data$X.test. - Xbar) * (data$X.control. - Ybar)) / (n-1)
SeX = sqrt(varX)
SeY = sqrt(varY)
corrXY = covXY / (SeX*SeY)
Di = data$X.test. - data$X.control.
meanDiff = mean(Di)
varDiff = varX + varY - 2 * covXY
varMeanDiff = varDiff / n
sdDiff = sqrt(varMeanDiff)
meanDiff
sdDiff
# CI = meanDiff +- sdDiff * T
CI_low = meanDiff - sdDiff * qt(0.95,n-1)
CI_high = meanDiff + sdDiff * qt(0.95,n-1)
CI_low
CI_high
qt(0.95,n-1)
#c) conduct a t test, since the variance is unknown
# under null:
testStats = meanDiff / sdDiff
testStats
qt(0.95,n-1)
rm(list=ls(all=TRUE))
setwd('/Users/Qihong/Dropbox/github/STAT310_MathematicalStatistics')
# load data
data = read.csv('data/ASCII Comma/Chapter 11/phonelines.txt')
n = dim(data)[1]
# a) plot diff against control
diff = data$X.test. - data$X.control.
plot(diff~data$X.control., pch = 20, main = 'Difference against control rate')
